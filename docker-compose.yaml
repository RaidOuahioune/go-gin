version: "3.9"
services:
  app:
    container_name: go-app
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8080"
    volumes:
      - .:/opt/app/api
    networks:
      - internal_net

  postgres:
    container_name: go-db
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: raid2019rr
      POSTGRES_DB: sentry
    volumes:
      - pgdb:/var/lib/postgresql/data
    networks:
      - internal_net

  redis:
    container_name: go-redis
    image: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: redis-server
    ports:
      - "4003:6379"
    volumes:
      - redis-data:/var/lib/redis
    networks:
      internal_net:
        ipv4_address: 192.168.100.10

  asynqmon:
    container_name: go-asynqmon
    image: hibiken/asynqmon
    environment:
      - REDIS_ADDR=192.168.100.10:6379
    ports:
      - "9000:8080"
    networks:
      - internal_net

  kafka:
    image: docker.io/bitnami/kafka
    container_name: kafka-go
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

    networks:
      - internal_net

  

networks:
  internal_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

volumes:
  pgdb:
  redis-data:
  kafka_data:
    driver: local
